<Window x:Class="OpenHab.Wpf.View.Dialogue.ServerAddressDialogue"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:OpenHab.Wpf.View.Dialogue"
        xmlns:p="clr-namespace:OpenHab.Wpf.View.Properties"
        xmlns:module="clr-namespace:OpenHab.Wpf.View.Module"
        xmlns:helpers="clr-namespace:OpenHab.Wpf.View.Resources.Helpers"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        DataContext="{Binding ServerAddressViewModel, 
                              Source={x:Static module:ViewModelLocator.Instance}}"
        d:DesignHeight="100" d:DesignWidth="300"
        Height="250" Width="400"
        WindowStartupLocation="CenterOwner"
        Title="{x:Static p:Resources.ConnectToServer}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/BaseResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Row="0">
            <TextBlock Text="{x:Static p:Resources.ServerAddressPrompt}"
                       TextWrapping="WrapWithOverflow"
                       Margin="10"
                       FontSize="20" />
        </Grid>

        <Grid Row="1" x:Name="InputArea"
              HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                       Text="{x:Static p:Resources.IpAddress}"
                       Margin="10"
                       FontSize="20" />

            <TextBox Grid.Column="1"
                     Margin="10"
                     Height="33"
                     FontSize="20"
                     VerticalContentAlignment="Center"
                     x:Name="IpAddressTextBox"
                     Text="{Binding IpAddress, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IpAddressIsValid}" Value="{x:Null}">
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="Background" Value="White" />
                                <Setter Property="ToolTip" Value="{x:Static p:Resources.ServerAddressPrompt}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IpAddressIsValid}" Value="True">
                                <Setter Property="BorderBrush" Value="LimeGreen" />
                                <Setter Property="ToolTip" Value="{x:Null}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IpAddressIsValid}" Value="False">
                                <Setter Property="BorderBrush" Value="Red" />
                                <Setter Property="ToolTip" Value="{x:Static p:Resources.NotAValidIpAddress}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionEstablished}" Value="True">
                                <Setter Property="Background" Value="#3332CD32" />
                                <Setter Property="ToolTip" Value="{x:Static p:Resources.ConnectionEstablished}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectionEstablished}" Value="False">
                                <Setter Property="Background" Value="#33FF0000" />
                                <Setter Property="ToolTip" Value="{x:Static p:Resources.NoConnectionEstablished}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <helpers:CircularBusyIndicator Grid.Column="1"
                                           Margin="15 10"
                                           HorizontalAlignment="Right"
                                           Visibility="{Binding CheckingConnection, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           Size="25"
                                           Fill="DodgerBlue" />
        </Grid>

        <Grid Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0"
                    Width="100"
                    Margin="10"
                    Height="33"
                    FontSize="20"
                    Content="{x:Static p:Resources.Ok}"
                    IsEnabled="{Binding ConnectionEstablished}"
                    Click="OkButton_OnClick"
                    HorizontalAlignment="Center" />

            <Button Grid.Column="1"
                    Width="200"
                    Margin="10"
                    Height="33"
                    FontSize="20"
                    Content="{x:Static p:Resources.CloseApplication}"
                    Click="CloseApplicationButton_OnClick"
                    HorizontalAlignment="Right" />
        </Grid>
    </Grid>
</Window>