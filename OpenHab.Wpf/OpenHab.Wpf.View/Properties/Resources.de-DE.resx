<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CloseApplication" xml:space="preserve">
    <value>Anwendung schließen</value>
  </data>
  <data name="ConnectionEstablished" xml:space="preserve">
    <value>Die Verbindung zum Server wurde erfolgreich hergestellt.</value>
  </data>
  <data name="ConnectionIndicator" xml:space="preserve">
    <value>Prüfen, ob Verbindungsaufbau möglich ist</value>
  </data>
  <data name="ConnectToServer" xml:space="preserve">
    <value>Zum Server verbinden</value>
  </data>
  <data name="IpAddress" xml:space="preserve">
    <value>Ip-Adresse</value>
  </data>
  <data name="NoConnectionEstablished" xml:space="preserve">
    <value>Es konnte keine Verbindung zu der angegebenen Ip-Adresse hergestellt werden.</value>
  </data>
  <data name="NotAValidIpAddress" xml:space="preserve">
    <value>Bitte gültige Ip-Adresse angeben (z.B.: 192.168.1.1)</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="ServerAddressPrompt" xml:space="preserve">
    <value>Bitte Adresse der OpenHAB-Serverkomponente eintragen zu welcher verbunden werden soll.</value>
  </data>
  <data name="Sitemaps" xml:space="preserve">
    <value>Sitemaps</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Brightness" xml:space="preserve">
    <value>Helligkeit</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Farbe</value>
  </data>
  <data name="Saturation" xml:space="preserve">
    <value>Sättigung</value>
  </data>
  <data name="FieldMustNotBeEmpty" xml:space="preserve">
    <value>Das Feld darf nicht leer sein. Bitte numerischen Wert eintragen</value>
  </data>
  <data name="IllegalCharacters" xml:space="preserve">
    <value>Eingabe ungültig. Nur numerische Werte sind erlaubt</value>
  </data>
  <data name="Things" xml:space="preserve">
    <value>Dinge</value>
  </data>
  <data name="StartTypeToBrowseForThings" xml:space="preserve">
    <value>Suchbegriff eingeben, um zu Dinge filtern...</value>
  </data>
  <data name="ConnectAutomatically" xml:space="preserve">
    <value>Automatisch verbinden</value>
  </data>
  <data name="ConnectAutomaticallyExplanation" xml:space="preserve">
    <value>Speichern der angegebenen IP Adresse und bei Neustart automatisch Verbindung herstellen</value>
  </data>
  <data name="Rules" xml:space="preserve">
    <value>Regeln</value>
  </data>
  <data name="StartTypeToBrowseForEverything" xml:space="preserve">
    <value>Suchbegriff eingeben, um zu filtern...</value>
  </data>
  <data name="DragItemToAddAsAction" xml:space="preserve">
    <value>Dieses Item über "Aktionen" ziehen, um es der Regel als Aktion hinzuzufügen</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="RunRule" xml:space="preserve">
    <value>Führt alle Aktionen dieser Regel aus</value>
  </data>
  <data name="DeleteRule" xml:space="preserve">
    <value>Diese Regel löschen</value>
  </data>
  <data name="RuleToggleOff" xml:space="preserve">
    <value>Diese Regel ist derzeit aktiv. Klicken um sie zu deaktivieren</value>
  </data>
  <data name="RuleToggleOn" xml:space="preserve">
    <value>Diese Regel ist derzeit inaktiv. Klicken um sie zu aktivieren</value>
  </data>
  <data name="CreateRule" xml:space="preserve">
    <value>Eine neue Regel erstellen</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>OpenHAB Wpf Rule Designer</value>
  </data>
  <data name="ReconnectionAttemptFormat" xml:space="preserve">
    <value>{}Die Verbindung wurde unterbrochen. Versuche erneut zu verbinden... ({0})</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Verbinden</value>
  </data>
  <data name="ConnectToAnotherServer" xml:space="preserve">
    <value>Zu einem anderen Server verbinden</value>
  </data>
  <data name="ConnectionOnline" xml:space="preserve">
    <value>Der Server ist online.</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Änderungen speichern</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>Es bestehen ungespeicherte Änderungen. Sollen diese gespeichert werden?</value>
  </data>
  <data name="DeleteAction" xml:space="preserve">
    <value>Diese Aktion von der Regel entfernen</value>
  </data>
  <data name="DeleteCondition" xml:space="preserve">
    <value>Diese Bedingung von der Regel entfernen</value>
  </data>
  <data name="DeleteTrigger" xml:space="preserve">
    <value>Diesen Auslöser von der Regel entfernen</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Bedingungen</value>
  </data>
  <data name="Triggers" xml:space="preserve">
    <value>Auslöser</value>
  </data>
  <data name="DayOfWeek" xml:space="preserve">
    <value>Wochentage</value>
  </data>
  <data name="Repetitive" xml:space="preserve">
    <value>Wiederhole alle</value>
  </data>
  <data name="TimeOfDay" xml:space="preserve">
    <value>Bestimmte Zeit</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Freitag</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Montag</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Samstag</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sonntag</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Donnerstag</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Dienstag</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Mittwoch</value>
  </data>
  <data name="ValidateHourMinSec" xml:space="preserve">
    <value>Bitte einen Wert zwischen {0} und {1} eingeben.</value>
  </data>
  <data name="EndRange" xml:space="preserve">
    <value>bis</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Um</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Stunde</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Stunden</value>
  </data>
  <data name="Minute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>Minuten</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>Sekunde</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>Sekunden</value>
  </data>
  <data name="DragItemToAddAsCondition" xml:space="preserve">
    <value>Dieses Item über "Bedingungen" ziehen, um es der Regel als Bedingung hinzuzufügen</value>
  </data>
  <data name="DragItemToAddAsTrigger" xml:space="preserve">
    <value>Dieses Item über "Auslöser" ziehen, um es der Regel als Auslöser hinzuzufügen</value>
  </data>
  <data name="DragThisToAddAsAnything" xml:space="preserve">
    <value>Dieses Item über einen beliebigen Bereich ziehen, um entsprechende Auslöser und Bedingungen zu erzeugen</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Umschalten um einen Zeitbereich anzugeben</value>
  </data>
  <data name="StartRange" xml:space="preserve">
    <value>Von</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="DarkTheme" xml:space="preserve">
    <value>Dunkles Thema</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>Werkzeuge</value>
  </data>
  <data name="RuleEditor" xml:space="preserve">
    <value>Regel-Editor ({0})</value>
  </data>
  <data name="NoRuleSelected" xml:space="preserve">
    <value>Keine Regel ausgewählt</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>Englisch</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Sprache wählen...</value>
  </data>
  <data name="MustReloadForNewCulture" xml:space="preserve">
    <value>Um die Änderungen wirksam zu machen, muss das Fenster neu geladen werden. Fortfahren?</value>
  </data>
  <data name="ReloadWithNewCulture" xml:space="preserve">
    <value>Sprachauswahl übernehmen</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="IsNotSelected" xml:space="preserve">
    <value>ist nicht ausgewählt</value>
  </data>
  <data name="IsSelected" xml:space="preserve">
    <value>ist ausgewählt</value>
  </data>
  <data name="TriggersAndTools" xml:space="preserve">
    <value>Auslöser &amp; Werkzeuge</value>
  </data>
  <data name="RunAction" xml:space="preserve">
    <value>Diese Aktion ausführen</value>
  </data>
</root>